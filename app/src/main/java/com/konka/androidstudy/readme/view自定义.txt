字体测量
Baseline是基线，在Android中，文字的绘制都是从Baseline处开始的
ascent意为上坡度：Baseline往上至字符“最高处”的距离我们称之为ascent，
descent意为下坡度：Baseline往下至字符“最低处”的距离我们称之为descent；
leading（行间距）则表示上一行字符的descent到该行字符的ascent之间的距离；
top和bottom文档描述地很模糊，其实这里我们可以借鉴一下TextView对文本的绘制，
TextView在绘制文本的时候总会在文本的最外层留出一些内边距，为什么要这样做？
因为TextView在绘制文本的时候考虑到了类似读音符号，下图中的A上面的符号就是一个拉丁文的类似读音符号的东西：有符号的文字
top的意思其实就是除了Baseline到字符顶端的距离外还应该包含这些符号的高度，bottom的意思也是一样。
一般情况下我们极少使用到类似的符号所以往往会忽略掉这些符号的存在，但是Android依然会在绘制文本的时候在文本外层留出一定的边距，
这就是为什么top和bottom总会比ascent和descent大一点的原因。
而在TextView中我们可以通过xml设置其属性android:includeFontPadding="false"去掉一定的边距值但是不能完全去掉。